#!/usr/bin/env bash
set -e

RELEASER_VERSION=1.0.0
RELEASER_ROOT=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
SEMVER_REGEX="^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(\\-[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$"

function error {
    echo -e "ERROR: $1" >&2
    exit 1
}

function print_last_version {
    echo -e "Last tag: `git describe --abbrev=0 --tags`"
}

function validate_version {
    local version=$1
    if [[ "$version" =~ $SEMVER_REGEX ]]; then
        :
    else
        error "version $version does not match the semver scheme 'X.Y.Z(-PRERELEASE)(+BUILD)'. See help for more information."
    fi
}

function validate_change_log {
    local today=`date +"%Y-%m-%d"`
    local count=`grep -c -E "^##[[:space:]]*$1[[:space:]]*-[[:space:]]*$today$" ./CHANGELOG.md`

    if (( "$count" > 0 )); then
        echo "    - The CHANGELOG.md file has been validated successfully"
    else
        error "The CHANGELOG.md file has not been updated with the release date of $today for version $1."
    fi
}

function command_version {
    echo -e "Releaser: $RELEASER_VERSION"
    exit 0
}

function command_help {
    echo -e "\
Usage:
    releaser release [--no-signing]
    releaser --version
    releaser --help

Options:
    -v, --version             Print the version of this tool.
    -h, --help                Print this help message.
Commands:
    release                   Interactively release a new version.
"

    exit 0
}

function command_release {
    print_last_version

    read -p "Which version do you wish to release? " -r
    local version=$REPLY

    validate_version "$version"

    echo -e "\n\
CHECKLIST:
    - Update read me
    - Update change log
    - Run the tests
    - Check integration statuses
"

    read -p "Do you wish to create the tag '$version' (y/n)? " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]
    then
        exit 1
    fi

    echo -e "\nVALIDATING..."
    validate_change_log "$version"

    git tag ${signing:+ -s} -m "Release version $version" "$version"

    echo -e "\nSUCCESSFULLY CREATED TAG: $version.\n";

    read -p "Do you wish to publish the tag '$version' (y/n)? " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]
    then
        exit 1
    fi

    git push --follow-tags
}

case $1 in
    --help|-h) command_help;;
    --version|-v) command_version ;;
    release)
        shift
        case "$1" in
            "") signing="1";;
            --no-signing) shift; signing="";;
            *) echo "Unknown option: $*"; command_help;;
        esac

        command_release
        ;;
    *) echo "Unknown arguments: $*"; command_help;;
esac
